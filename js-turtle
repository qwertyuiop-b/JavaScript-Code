<!DOCTYPE html>
<html>
<head>
	<title>JS-TURTLE-TEST</title>
	<style>
		body {
			background-color: aqua;
		}
		canvas {
			border: 1px solid;
			background-color: white;
		}
		form {
			margin:10px 0;
		}
		input,button {
			font-size:1.4em;
		}
	</style>
</head>
<body>
<canvas width="1920" height="2160" id="canvas"></canvas>
<form id="cmd-form">
	<input type="text" id="cmd-input" />
	<button>Run</button>
</form>
	<script>
		const canvas = document.querySelector("#canvas")
		const cmdForm = document.querySelector("#cmd-form")
		const cmdInput = document.querySelector("#cmd-input")
		const ctx = canvas.getContext("2d")
		const commands = []
		const extent=360
		const step=360

		cmdForm.addEventListener('submit',runCommand)
		runCommand()
		ctx.rotate(Math.PI/2)
		for (var i = 0; i < 360; i++) {
			circle(i)
			ctx.rotate(-Math.PI/180)
			}
		function runCommand(e){
			if (e) {
				e.preventDefault()
			}
			const cmd = cmdInput.value
			cmdInput.value = ""
			const parsedCommand = parseCmd(cmd)
			ctx.restore()
			ctx.clearRect(0,0,canvas.width,canvas.height)
			ctx.save()
			ctx.translate(canvas.width/2,canvas.height/2)
			if (parsedCommand.dir) {
				commands.push(parsedCommand)
			}
			for (let command of commands){
				draw(command)
			}
			drawTurtle()
			console.log("the parsed commands are: ",commands)
		}
		function draw(command){
			console.log("draw command",command)
			const { dir,angle,value } = command
			ctx.rotate(angle)
			if (dir === "FORWARD" || dir === "BACKWARD") {
				ctx.beginPath()
				ctx.moveTo(0,0)
				ctx.lineTo(0,value)
				ctx.translate(0,value)
				ctx.closePath()
				ctx.stroke()
			}
		}
		function drawTurtle(){
			ctx.beginPath()
			ctx.moveTo(-10,-10)
			ctx.lineTo(0,10)
			ctx.lineTo(10,-10)
			ctx.closePath()
			ctx.stroke()
		}
		function parseCmd(command) {
			console.log("command to parse", command)
			let [dir,value] = command.split(" ")
			let angle=0
			let resultDir = ""
			switch(dir.toUpperCase()){
				case "FD":
					resultDir = "FORWARD"
					break
				case "BK":
					resultDir = "BACKWARD"
					break
				case "LT":
					resultDir = "LEFT"
					angle=-value
					break
				case "RT":
					resultDir = "RIGHT"
					angle=value
					break
			}
			return {
				dir: resultDir,
				value,
				angle:deg2Rad(angle),
			}
		}
		function deg2Rad(deg) {
			return (deg*Math.PI)/180
		}
	</script>

</body>
</html>
